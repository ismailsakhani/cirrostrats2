Practice readibility and simplicity. Include description and documentation for others to read and make changes to it

**IS:   fix and cleanup description in examples on homepage.
        make search bar static and minimal.

Weather:
    TAF can be out of index. remove TAF if unavailable. Redirect to no found page if no weather found.
    for example `w kcdw` returns error since index is out range probably because of no TAF.

Fix exponentially destructive while loop in the Gate_Scrape_Thread within root_gate_checker.py

Use models and sql for database management.

Change queries pickle to csv or txt file

Account for reliable and unreliable outlaws at source rather than scheduled flights
Highlight weather minimums for alternate requirements;(1-2-3 rule per ETA)
Highlight Icing conditions in blue; LIFR in pink 
include gate in this packet
include IFR routing through flight aware. 
associate flight numbers in gates table to their dedicated information for departure, destination and weather

Use Flightaware API to extract clearance and route.

When User first accesses the web the date and time of the latest master should be displayed 

Add menu section:
    List all gates, 
    Analyses, statistics and misery map using delay graph.
        e.g: Kudos to gate C101 for most ontime departures. 
            Worst gate for delays(show sorted values)   

need to be able to receive alerts if the weather deteriorates:
    Account for any ground stop or delays there might be at any particular airport in the National Airspace System

add delay information and color code it

setup latest changes page. Include updates with dates and description. 
Fix Gate_Scrape Scrape uppercase. It is unusual.

Deploy the ability to chat. Store all queries with time stamp for later analyses.
    Compare and assess similar frequent queries, account for typo. 
    Take query and if return cannot be formulated let the client know:
        "Unable to process your search at this time.
        It has been added to our resolutions list for further attention with absolute dedication."
        **option** Add Feedback to go with it

add ability to see raw metar or simplified one with only pertinant information.

Big bug when extracting info from other sources. the data can be messy and unreiable. Create redundency

airport name, gate and flight # can be partial/absolute.
    Essentially a functionality to predict in dropdown in search similar to google - indexing.
    search should initiate right away for flight num, airport or gate

Add these query words and functionality to chat :
weather_range = ['met ', ' met', ' met ', 'met', 'taf ', ' taf', ' taf ', 'taf', 'weather', 'metar', 'metar ']

"{gate} for {partial/complete airport ID/name}" = "{gate} {airport}"
"{gate} for {partial/complete airport name}" = "{gate} {airport}"   
"weather for {partial/complete airport} = "{metar} {airport}"
"{flight number} weather" = "{metar} {departure airport} {destination airport}"
"{flight number} destination" = return destination or destination
"{flight number} not, notam, notams" = return notams for departure and destination. include ability to return just pertinant information.